'use strict'; // Generated by DataJsGenerator
define([], function () {
  function GatewayData($http, prefix) {
    this.$http = $http;
    prefix = typeof prefix === 'string' ? prefix : '';
    this.resolve = {};
    var getData = function (res) {
      return res.data;
    };
    this.ApplicationInstanceController = {};
    this.ApplicationInstanceController.create = function (appInstModel) {
      var req = {};
      req.method = 'POST';
      req.url = prefix + '/data/newApp';
      req.data = appInstModel;
      req.params = {};
      return $http(req).then(getData);
    };
    this.ApplicationInstanceController.findById = function (id) {
      var req = {};
      req.method = 'GET';
      req.url = prefix + '/data/instances/{id}';
      req.url = req.url.replace(/{id}/, id);
      req.params = {};
      return $http(req).then(getData);
    };
    this.ApplicationInstanceController.listAllAppInsts = function () {
      var req = {};
      req.method = 'GET';
      req.url = prefix + '/data/instances';
      req.params = {};
      return $http(req).then(getData);
    };
    this.ApplicationInstanceController.remove = function (id) {
      var req = {};
      req.method = 'DELETE';
      req.url = prefix + '/data/instances/{id}';
      req.url = req.url.replace(/{id}/, id);
      req.params = {};
      return $http(req).then(getData);
    };
    this.ApplicationInstanceController.search = function (name) {
      var req = {};
      req.method = 'GET';
      req.url = prefix + '/data/find';
      req.params = {};
      req.params.name = name;
      return $http(req).then(getData);
    };
    var ApplicationInstanceController = this.ApplicationInstanceController;
    this.resolve.ApplicationInstanceController = {};
    this.resolve.ApplicationInstanceController.findById = function (GatewayData, $route) {
      return ApplicationInstanceController.findById($route.current.params.id);
    };
    this.resolve.ApplicationInstanceController.listAllAppInsts = function (GatewayData, $route) {
      return ApplicationInstanceController.listAllAppInsts();
    };
    this.resolve.ApplicationInstanceController.search = function (GatewayData, $route) {
      return ApplicationInstanceController.search($route.current.params.name);
    };
    this.PersonController = {};
    this.PersonController.create = function (personModel) {
      var req = {};
      req.method = 'POST';
      req.url = prefix + '/data/persons';
      req.data = personModel;
      req.params = {};
      return $http(req).then(getData);
    };
    this.PersonController.list = function () {
      var req = {};
      req.method = 'GET';
      req.url = prefix + '/data/persons';
      req.params = {};
      return $http(req).then(getData);
    };
    this.PersonController.search = function (name) {
      var req = {};
      req.method = 'GET';
      req.url = prefix + '/data/search';
      req.params = {};
      req.params.name = name;
      return $http(req).then(getData);
    };
    var PersonController = this.PersonController;
    this.resolve.PersonController = {};
    this.resolve.PersonController.list = function (GatewayData, $route) {
      return PersonController.list();
    };
    this.resolve.PersonController.search = function (GatewayData, $route) {
      return PersonController.search($route.current.params.name);
    };
  }
  
  return GatewayData;
});
